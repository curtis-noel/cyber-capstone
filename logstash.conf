input {
  beats {
    port => 5044
  }
}

filter {
  if [type] == "dns" {
    csv {
      columns => ["time","source_computer","computer_resolved"]
      separator => ","
    }
    ruby {
      code => 'event.set("time",event.get("time").to_i + 1472702400)'
    }
    date {
      match => [ "time","UNIX" ]
    }
    mutate {
      convert => ["duration", "integer"]
      convert => ["packet_count", "integer"]
      convert => ["byte_count", "integer"]
    }
  }

  if [type] == "proc" {
    csv {
      columns => ["time","user_domain","computer","process name","start_end"]
      separator => ","
    }
    ruby {
      code => 'event.set("time",event.get("time").to_i + 1472702400)'
    }
    date {
      match => [ "time","UNIX" ]
    }
  }

  if [type] == "auth" {
    csv {
      columns => ["time","source_user_domain","destination_user_domain","source_computer","destination_computer","authentication_type","logon_type","authentication_orientation","success_failure"]
      separator => ","
    }
    ruby {
      code => 'event.set("time",event.get("time").to_i + 1472702400)'
    }
    date {
      match => [ "time","UNIX" ]
    }
  }

  if [type] == "redteam" {
    csv {
      columns => ["time","user_domain","source_computer","destination_computer"]
      separator => ","
    }
    ruby {
      code => 'event.set("time",event.get("time").to_i + 1472702400)'
    }
    date {
      match => [ "time","UNIX" ]
    }
  }

  if [type] == "flows" {
    csv {
      columns => ["time","duration","source_computer","source_port","destination_computer","destination_port","protocol","packet_count","byte_count"]
      separator => ","
    }

    ruby {
      code => 'event.set("time",event.get("time").to_i + 1472702400)'
    }

    date {
      match => [ "time","UNIX" ]
    }

    mutate {
      convert => ["duration", "integer"]
      convert => ["packet_count", "integer"]
      convert => ["byte_count", "integer"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "cyber-capstone"
  }
}
